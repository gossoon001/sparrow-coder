package $package_dao_impl;

import com.sparrow.orm.query.BooleanCriteria;
import com.sparrow.orm.query.Criteria;
import com.sparrow.orm.query.SearchCriteria;
import com.sparrow.orm.template.impl.ORMStrategy;
import com.sparrow.security.admin.dao.$table_nameDAO;
import $package_dao.query.$object_po.Count$table_nameQuery;
import $package_dao.query.$object_po.Pager$table_nameQuery;
import $package_po.$table_name;
import java.util.List;
import javax.inject.Named;

@Named
public class $table_nameDaoImpl extends ORMStrategy<$table_name, Long> implements $table_nameDAO {
    @Override public List<$table_name> query$table_names(Pager$table_nameQuery pager$table_nameQuery) {
        SearchCriteria searchCriteria = new SearchCriteria(pager$table_nameQuery.getPager());
        searchCriteria.setWhere(this.generateCriteria(pager$table_nameQuery));
        return this.getList(searchCriteria);
    }

    private BooleanCriteria generateCriteria(Count$table_nameQuery count$table_nameQuery) {
        Long startTime=null;
        if(count$table_nameQuery.getBeginDate()!=null){
            startTime=count$table_nameQuery.getBeginDate().getTime();
        }

        Long endTime=null;
        if(count$table_nameQuery.getEndDate()!=null){
            endTime=count$table_nameQuery.getEndDate().getTime();
        }

        return BooleanCriteria.criteria(
            Criteria.field("$object_po.$object_poName").equal(count$table_nameQuery.getName()))
            .and(Criteria.field("$object_po.createTime").greaterThan(startTime))
            .and(Criteria.field("$object_po.createTime").lessThan(endTime));
    }

    @Override public Long count$table_name(Count$table_nameQuery $object_poPagerQuery) {
        SearchCriteria searchCriteria = new SearchCriteria();
        searchCriteria.setWhere(this.generateCriteria($object_poPagerQuery));
        return this.getCount(searchCriteria);
    }
}
